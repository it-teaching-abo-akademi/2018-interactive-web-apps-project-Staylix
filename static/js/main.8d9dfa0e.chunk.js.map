{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["baseUrl","uriQuote","symbol","encodeURI","colors","colorsBackground","Button","react_default","a","createElement","className","this","props","classes","onClick","action","type","content","icon","Component","Loader","SingleInputForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","onSubmit","preventDefault","htmlFor","label","id","onChange","App_Button","buttonClass","buttonContent","DoubleInputForm","_this2","value1","value2","name","labels","types","PortfolioList","_this3","portfolios","currencyRate","showChart","stocksChart","labelsChart","datasetsChart","range","addPortfolio","removePortfolio","addStock","removeSelectedStocks","changeCurrency","addCheckedStock","getCurrencyExchangeRate","changeSelectState","hideModal","changeRange","length","alert","stocks","currency","portfolioName","stock","_this4","toUpperCase","shares","url","fetch","then","res","json","result","error","symbolAlreadyAdded","forEach","stk","push","index","selected","splice","stockSymbol","_this5","baseUrlCurrency","_this6","arguments","undefined","filter","lastPortfolio","datasets","symbolList","symbols","interval","1d","1m","3m","6m","ytd","1y","2y","5y","i","uriChart","key","values","chart","map","keys","data","close","colorNumber","Math","floor","random","borderColor","backgroundColor","spanGaps","portfoliosFromStorage","JSON","parse","localStorage","getItem","window","addEventListener","saveStateToLocalStorage","removeEventListener","setItem","stringify","_this7","listPortfolios","App_Portfolio","leftPortfolios","rightPortfolios","unshift","App_SingleInputForm","App_Modal","shown","Portfolio","_this8","callAddStock","callChangeCurrency","callChangeSelectState","_this9","listStocks","App_Stock","App_Switch","App_DoubleInputForm","scope","Modal","es","options","App_SwitchMultiple","texts","titles","changeSelected","selectedText","Logo","src","alt","Stock","_this10","isLoaded","logoLoaded","price","_this11","url_logo","logo","isSelected","App_Logo","Intl","NumberFormat","style","format","App_Loader","Switch","_this12","clickHandler","leftSwitch","rightSwitch","SwitchMultiple","buttons","App_SwitchItem","text","icons","title","SwitchItem","assign","App","href","App_PortfolioList","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d9dfa0e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n\r\n/* This part manage URLs for requests */\r\nconst apiKeyCurrency = \"0ZHUEM2KZK605UBO\";\r\nconst baseUrlCurrency = \"https://www.alphavantage.co/query?apikey=\" + apiKeyCurrency;\r\nconst urlCurrency = baseUrlCurrency + \"&function=CURRENCY_EXCHANGE_RATE&from_currency=USD&to_currency=EUR\";\r\n\r\nconst baseUrl = \"https://api.iextrading.com/1.0/\";\r\n\r\nfunction uriQuote(symbol) {\r\n    return baseUrl + \"stock/\" + encodeURI(symbol) + \"/quote\";\r\n}\r\n\r\nfunction uriChart(symbolList, range) {\r\n    let symbols = \"\";\r\n    const intervalByRange = {\"1d\": \"4\", \"1m\": \"1\", \"3m\": \"2\", \"6m\": \"3\", \"ytd\": \"4\", \"1y\": \"6\", \"2y\": \"9\", \"5y\": \"16\"};\r\n    let interval = intervalByRange[range];\r\n    for (let i = 0; i < symbolList.length; i++) {\r\n        if (i > 0)\r\n            symbols += ',';\r\n        symbols += symbolList[i].symbol;\r\n    }\r\n    let url = baseUrl + \"stock/market/batch?types=chart&symbols=\" + encodeURI(symbols);\r\n    return url + \"&range=\" + range + \"&chartInterval=\" + interval;\r\n}\r\n\r\nfunction uriLogo(symbol) {\r\n    return baseUrl + \"stock/\" + encodeURI(symbol) + \"/logo\";\r\n}\r\n\r\n/* The color palette for charts */\r\nconst colors = [\"#537c8e\", \"#2ebdbd\", \"#ceae7f\", \"#85583f\", \"#847370\", \"#de9396\", \"#b94a59\", \"#6a0a29\", \"#423c6d\", \"#7a839e\", \"#94b5c2\", \"#eadcc1\"];\r\nconst colorsBackground = [\"#537c8e44\", \"#2ebdbd44\", \"#ceae7f44\", \"#85583f44\", \"#84737044\", \"#de939644\", \"#b94a5944\", \"#6a0a2944\", \"#423c6d44\", \"#7a839e44\", \"#94b5c244\", \"#eadcc144\"];\r\n\r\n/* Button with icon component */\r\nclass Button extends Component {\r\n    render() {\r\n        return (\r\n            <button className={this.props.classes} onClick={this.props.action} type={this.props.type}>\r\n                <span><b>{this.props.content}</b><i className=\"material-icons\">{this.props.icon}</i></span>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nclass Loader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"lds-ellipsis\">\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SingleInputForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: \"\"};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.onSubmit(this.state.value);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} className=\"form-inline\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"id_input\" className=\"mr-2\">{this.props.label}</label>\r\n                        <input id=\"id_input\" type=\"text\" className=\"form-control mr-2\" value={this.state.value}\r\n                               onChange={this.handleChange}/>\r\n                    </div>\r\n                    <Button classes={this.props.buttonClass} content={this.props.buttonContent}\r\n                            icon={\"add_circle_outline\"}\r\n                            type={\"submit\"}/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DoubleInputForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value1: \"\", value2: \"\"};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let state = this.state;\r\n        state[event.target.name] = event.target.value;\r\n        this.setState(state);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.onSubmit(this.state);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} className=\"my-3\">\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"value1\" className=\"col-md-3 col-form-label\">{this.props.labels[0]}</label>\r\n                        <div className=\"col-md-9\">\r\n                            <input id=\"value1\" name=\"value1\" type={this.props.types[0]} className=\"form-control\"\r\n                                   value={this.state.value1}\r\n                                   onChange={this.handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"value2\" className=\"col-md-3 col-form-label\">{this.props.labels[1]}</label>\r\n                        <div className=\"col-md-9\">\r\n                            <input id=\"value2\" name=\"value2\" type={this.props.types[0]} className=\"form-control\"\r\n                               value={this.state.value2}\r\n                               onChange={this.handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <Button classes={this.props.buttonClass} content={this.props.buttonContent}\r\n                            icon={\"add_circle_outline\"}\r\n                            type={\"submit\"}/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass PortfolioList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            portfolios: {},\r\n            currencyRate: 0,\r\n            showChart: false,\r\n            stocksChart: [],\r\n            labelsChart: [],\r\n            datasetsChart: [],\r\n            range: \"1d\",\r\n        };\r\n\r\n        this.addPortfolio = this.addPortfolio.bind(this);\r\n        this.removePortfolio = this.removePortfolio.bind(this);\r\n        this.addStock = this.addStock.bind(this);\r\n        this.removeSelectedStocks = this.removeSelectedStocks.bind(this);\r\n        this.changeCurrency = this.changeCurrency.bind(this);\r\n        this.addCheckedStock = this.addCheckedStock.bind(this);\r\n        this.getCurrencyExchangeRate = this.getCurrencyExchangeRate.bind(this);\r\n        this.changeSelectState = this.changeSelectState.bind(this);\r\n        this.showChart = this.showChart.bind(this);\r\n        this.hideModal = this.hideModal.bind(this);\r\n        this.changeRange = this.changeRange.bind(this);\r\n    }\r\n\r\n    addPortfolio(name) {\r\n        let portfolios = this.state.portfolios;\r\n        if (portfolios.length >= 10)\r\n            alert('You cannot have more than 10 portfolios.');\r\n        else if (name.length < 1)\r\n            alert('Please choose a name.');\r\n        else if (name in portfolios)\r\n            alert('This portfolio name is already used.');\r\n        else {\r\n            portfolios[name] = {name: name, stocks: [], currency: \"EUR\"};\r\n        }\r\n        this.setState({portfolios: portfolios});\r\n    }\r\n\r\n    removePortfolio(portfolioName) {\r\n        let portfolios = this.state.portfolios;\r\n        delete portfolios[portfolioName];\r\n        this.setState({portfolios: portfolios});\r\n    }\r\n\r\n    addStock(portfolioName, stock) {\r\n        stock.symbol = stock.symbol.toUpperCase();\r\n        let portfolios = this.state.portfolios;\r\n        if (stock.symbol.length < 1)\r\n            alert('Please give the stock symbol.');\r\n        else if (stock.shares < 1)\r\n            alert('Please add at least 1 share.');\r\n        else {\r\n            let url = uriQuote(stock.symbol);\r\n            fetch(url)\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        if (result === {})\r\n                            alert('Unknown symbol.');\r\n                        else {\r\n                            this.addCheckedStock(portfolios, portfolioName, stock);\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        alert('Unknown symbol. Error: ' + error);\r\n                    }\r\n                );\r\n        }\r\n    }\r\n\r\n    // This function is called only if the symbol is validated.\r\n    addCheckedStock(portfolios, portfolioName, stock) {\r\n        if (portfolios[portfolioName].stocks.length >= 50)\r\n            alert('You cannot have more than 50 stocks.');\r\n        else {\r\n            let symbolAlreadyAdded = false;\r\n            portfolios[portfolioName].stocks.forEach(function (stk) {\r\n                if (stk.symbol === stock.symbol) {\r\n                    symbolAlreadyAdded = true;\r\n                }\r\n            });\r\n            if (symbolAlreadyAdded)\r\n                alert('This symbol is already added.');\r\n            else\r\n                portfolios[portfolioName].stocks.push(stock);\r\n        }\r\n        this.setState({portfolios: portfolios});\r\n    }\r\n\r\n    // Remove all the selected stocks on the passed portfolio\r\n    removeSelectedStocks(portfolioName) {\r\n        let portfolios = this.state.portfolios;\r\n        portfolios[portfolioName].stocks.forEach(function (stock, index) {\r\n            if (stock.selected) {\r\n                portfolios[portfolioName].stocks.splice(index, 1);\r\n            }\r\n        });\r\n        this.setState({portfolios: portfolios});\r\n    }\r\n\r\n    changeSelectState(portfolioName, stockSymbol) {\r\n        let portfolios = this.state.portfolios;\r\n        portfolios[portfolioName].stocks.forEach(function (stock) {\r\n            if (stock.symbol === stockSymbol) {\r\n                stock.selected = !stock.selected;\r\n            }\r\n        });\r\n        this.setState({portfolios: portfolios});\r\n    }\r\n\r\n    // This method change the currency of a portfolio and keep it in its state\r\n    changeCurrency(portfolioName) {\r\n        let portfolios = this.state.portfolios;\r\n        if (portfolios[portfolioName].currency === \"EUR\")\r\n            portfolios[portfolioName].currency = \"USD\";\r\n        else {\r\n            portfolios[portfolioName].currency = \"EUR\";\r\n        }\r\n        this.setState({portfolios: portfolios});\r\n    }\r\n\r\n    // This method call the api to know the currency rate to switch from USD to EUR\r\n    getCurrencyExchangeRate() {\r\n        fetch(urlCurrency)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        currencyRate: result['Realtime Currency Exchange Rate']['5. Exchange Rate']\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        currencyRate: 0,\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    // To show the modal with the chart\r\n    showChart(portfolioName, range = null) {\r\n        if (typeof range === \"object\")\r\n            range = this.state.range;\r\n        let stocks = this.state.portfolios[portfolioName].stocks.filter(stock => stock.selected);\r\n        if (stocks.length < 1) {\r\n            alert(\"Select at least one stock.\");\r\n            return;\r\n        }\r\n        this.setState({\r\n            showChart: true,\r\n            stocksChart: stocks,\r\n            lastPortfolio: portfolioName\r\n        });\r\n        let labels = [];\r\n        let datasets = [];\r\n        let url = uriChart(stocks, range);\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result === {})\r\n                        alert('Impossible to fetch data.');\r\n                    else {\r\n                        labels = Object.values(Object.values(result)[0].chart).map((value) => {\r\n                            return (value.label)\r\n                        });\r\n                        for (let key in Object.keys(result)) {\r\n                            let symbol = Object.keys(result)[key]; // Don't understand why, but it works\r\n                            let data = Object.values(result[symbol].chart).map((value) => {\r\n                                return (value.close)\r\n                            });\r\n                            let colorNumber = Math.floor(Math.random() * colors.length);\r\n                            datasets.push({\r\n                                label: symbol,\r\n                                data: data,\r\n                                borderColor: colors[colorNumber],\r\n                                backgroundColor: colorsBackground[colorNumber],\r\n                                spanGaps: true\r\n                            })\r\n                        }\r\n                        this.setState({\r\n                            labelsChart: labels,\r\n                            datasetsChart: datasets\r\n                        });\r\n                    }\r\n                }\r\n                ,\r\n                (error) => {\r\n                    alert('Impossible to fetch data.');\r\n                    this.setState({\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    // To hide the modal\r\n    hideModal() {\r\n        this.setState({showChart: false})\r\n    }\r\n\r\n    // To change the range of the chart (called from the switcher in the modal)\r\n    changeRange(range) {\r\n        this.setState({range: range});\r\n        this.showChart(this.state.lastPortfolio, range);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // We call this function only at the loading of the page, to get the exchange rate between EUR and USD\r\n        this.getCurrencyExchangeRate();\r\n\r\n        // Load portfolios from local storage\r\n        let portfoliosFromStorage = JSON.parse(localStorage.getItem(\"portfolios\"));\r\n        if (typeof portfoliosFromStorage === 'undefined' || portfoliosFromStorage === null)\r\n            portfoliosFromStorage = {};\r\n        this.setState({portfolios: portfoliosFromStorage});\r\n\r\n        window.addEventListener(\r\n            \"beforeunload\",\r\n            this.saveStateToLocalStorage.bind(this)\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\r\n            \"beforeunload\",\r\n            this.saveStateToLocalStorage.bind(this)\r\n        );\r\n\r\n        // saves if component has a chance to unmount\r\n        this.saveStateToLocalStorage();\r\n    }\r\n\r\n    saveStateToLocalStorage() {\r\n        (localStorage.setItem(\"portfolios\", JSON.stringify(this.state.portfolios)));\r\n    }\r\n\r\n    render() {\r\n        let keys = Object.keys(this.state.portfolios);\r\n        let portfolios = this.state.portfolios;\r\n        let listPortfolios = keys.map((portfolioName) =>\r\n            <Portfolio key={portfolios[portfolioName].name}\r\n                       name={portfolios[portfolioName].name}\r\n                       stocks={portfolios[portfolioName].stocks}\r\n                       currency={portfolios[portfolioName].currency}\r\n                       currencyRate={this.state.currencyRate}\r\n                       removePortfolio={this.removePortfolio}\r\n                       addStock={this.addStock}\r\n                       removeSelectedStocks={this.removeSelectedStocks}\r\n                       changeCurrency={this.changeCurrency}\r\n                       changeSelectState={this.changeSelectState}\r\n                       showChart={this.showChart}\r\n            />);\r\n        if (listPortfolios.length > 1) {\r\n            let leftPortfolios = [];\r\n            let rightPortfolios = [];\r\n            for (let i = 0; i < listPortfolios.length; ++i) {\r\n                if (i % 2 === 0)\r\n                    leftPortfolios.unshift(listPortfolios[i]);\r\n                else\r\n                    rightPortfolios.unshift(listPortfolios[i]);\r\n            }\r\n            listPortfolios =\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-lg-6 px-3\">\r\n                        {leftPortfolios}\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-6 px-3\">\r\n                        {rightPortfolios}\r\n                    </div>\r\n                </div>;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"centered\">\r\n                    <h1 className=\"mt-3\">Your Portfolios</h1>\r\n                    <SingleInputForm onSubmit={this.addPortfolio}\r\n                                     label={\"Portfolio Name\"}\r\n                                     buttonContent={\"Add new Portfolio\"}\r\n                                     buttonClass={\"myBtn-dark\"}/>\r\n                </div>\r\n                <Modal hideModal={this.hideModal}\r\n                       labels={this.state.labelsChart}\r\n                       datasets={this.state.datasetsChart}\r\n                       shown={this.state.showChart}\r\n                       changeRange={this.changeRange}\r\n                       range={this.state.range}\r\n                />\r\n\r\n                <div className=\"mt-4\">\r\n                    {listPortfolios}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.callAddStock = this.callAddStock.bind(this);\r\n        this.callChangeCurrency = this.callChangeCurrency.bind(this);\r\n        this.callChangeSelectState = this.callChangeSelectState.bind(this);\r\n    }\r\n\r\n    callAddStock(state) {\r\n        let stock = {symbol: state.value1, shares: state.value2};\r\n        this.props.addStock(this.props.name, stock);\r\n    }\r\n\r\n    callChangeCurrency() {\r\n        this.props.changeCurrency(this.props.name);\r\n    }\r\n\r\n    callChangeSelectState(stockSymbol) {\r\n        this.props.changeSelectState(this.props.name, stockSymbol)\r\n    }\r\n\r\n    render() {\r\n        let listStocks = this.props.stocks.map((stock) =>\r\n            <Stock key={stock.symbol}\r\n                   symbol={stock.symbol}\r\n                   shares={stock.shares}\r\n                   selected={stock.selected}\r\n                   currency={this.props.currency}\r\n                   currencyRate={this.props.currencyRate}\r\n                   changeSelectState={this.callChangeSelectState}\r\n            />);\r\n\r\n        return (\r\n            <div className=\"portfolio mb-4 animated fadeIn slow\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        <h1>{this.props.name}</h1>\r\n                        <Button classes={\"myBtn-light\"} content={\"Remove Portfolio\"} icon={\"delete_outline\"}\r\n                                action={this.props.removePortfolio.bind(this, this.props.name)}/>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <Switch currency={this.props.currency}\r\n                                changeCurrency={this.callChangeCurrency}/>\r\n                    </div>\r\n                </div>\r\n                <DoubleInputForm onSubmit={this.callAddStock}\r\n                                 types={[\"text\", \"number\"]}\r\n                                 labels={[\"Stock Symbol\", \"Number of shares\"]}\r\n                                 buttonContent={\"Add stock\"}\r\n                                 buttonClass={\"myBtn-light\"}/>\r\n\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Symbol</th>\r\n                        <th scope=\"col\">Unit value</th>\r\n                        <th scope=\"col\">Quantity</th>\r\n                        <th scope=\"col\">Total value</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {listStocks}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"centered\">\r\n                    <Button classes={\"myBtn-light\"} content={\"Remove Selected Stocks\"} icon={\"delete_outline\"}\r\n                            action={this.props.removeSelectedStocks.bind(this, this.props.name)}/>\r\n                    <Button classes={\"myBtn-light\"} content={\"Show Chart\"} icon={\"insert_chart_outlined\"}\r\n                            action={this.props.showChart.bind(this, this.props.name)}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Modal extends Component {\r\n    render() {\r\n        const texts = [\"1d\", \"1m\", \"3m\", \"6m\", \"ytd\", \"1y\", \"2y\", \"5y\"];\r\n        const titles = [\"One day\", \"One month\", \"Three months\", \"Six months\", \"Year-to-date\", \"One year\", \"Two years\", \"Five years\"];\r\n\r\n        let data = {\r\n            labels: this.props.labels,\r\n            datasets: this.props.datasets\r\n        };\r\n        let options = {}; //{scales: {yAxes: [{ticks: {beginAtZero: true}}]}};\r\n        return (\r\n            <div className={this.props.shown ? \"modal\" : \"modal hide\"}>\r\n                <div className=\"modal-content\">\r\n                    <div>\r\n                        <i className=\"material-icons\" onClick={this.props.hideModal}>cancel</i>\r\n                    </div>\r\n                    <Line data={data} options={options}/>\r\n                    <div className=\"centered\">\r\n                        <SwitchMultiple\r\n                            texts={texts}\r\n                            titles={titles}\r\n                            changeSelected={this.props.changeRange}\r\n                            selectedText={this.props.range}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Logo extends Component {\r\n    render() {\r\n        return (\r\n            <img className=\"logo\" src={this.props.src} alt=\"\"/>\r\n        );\r\n    }\r\n}\r\n\r\nclass Stock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            logoLoaded: false,\r\n            price: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let url = uriQuote(this.props.symbol);\r\n        let url_logo = uriLogo(this.props.symbol);\r\n\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result === {})\r\n                        alert('Unknown symbol.');\r\n                    else {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            price: result['latestPrice']\r\n                        });\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n        fetch(url_logo)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result === {})\r\n                        alert(\"Unknown symbol's logo.\");\r\n                    else {\r\n                        this.setState({\r\n                            logoLoaded: true,\r\n                            logo: result[\"url\"]\r\n                        });\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        logoLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let elementLoaded, price;\r\n        let currency = this.props.currency;\r\n        if (currency == null)\r\n            currency = \"USD\";\r\n        if (currency === \"EUR\") {\r\n            price = this.state.price * this.props.currencyRate;\r\n        } else {\r\n            price = this.state.price\r\n        }\r\n        const isSelected = this.props.selected;\r\n        if (this.state.isLoaded && this.state.logoLoaded && this.props.currencyRate > 0) {\r\n            elementLoaded =\r\n                <tr className={isSelected ? \"selected\" : \"\"}\r\n                    onClick={this.props.changeSelectState.bind(this, this.props.symbol)}>\r\n                    <th scope=\"row\"><Logo src={this.state.logo}/>{this.props.symbol}</th>\r\n                    <td>{new Intl.NumberFormat('fi-FI', {\r\n                        style: 'currency',\r\n                        currency: currency\r\n                    }).format(price)}</td>\r\n                    <td>{this.props.shares}</td>\r\n                    <td>{new Intl.NumberFormat('fi-FI', {\r\n                        style: 'currency',\r\n                        currency: currency\r\n                    }).format(price * this.props.shares)}</td>\r\n                </tr>\r\n        } else {\r\n            elementLoaded =\r\n                <tr>\r\n                    <th scope=\"row\">{this.props.symbol}</th>\r\n                    <td>\r\n                        <Loader/>\r\n                    </td>\r\n                    <td>{this.props.shares}</td>\r\n                    <td>\r\n                        <Loader/>\r\n                    </td>\r\n                </tr>\r\n        }\r\n\r\n        return (\r\n            elementLoaded\r\n        );\r\n    }\r\n}\r\n\r\nclass Switch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n    }\r\n\r\n    clickHandler() {\r\n        this.props.changeCurrency();\r\n    }\r\n\r\n    render() {\r\n        let leftSwitch;\r\n        let rightSwitch;\r\n\r\n        if (this.props.currency === \"EUR\") {\r\n            leftSwitch = \"switchActive\";\r\n            rightSwitch = \"switchDisabled\";\r\n        } else {\r\n            rightSwitch = \"switchActive\";\r\n            leftSwitch = \"switchDisabled\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"switch\" onClick={this.clickHandler}>\r\n                <div className={leftSwitch}><i className=\"material-icons\">euro_symbol</i></div>\r\n                <div className={rightSwitch}><i className=\"material-icons\">attach_money</i></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SwitchMultiple extends Component {\r\n    render() {\r\n        let className;\r\n        let buttons = [];\r\n        for (let i = 0; i < this.props.texts.length; i++) {\r\n            if (this.props.selectedText === this.props.texts[i])\r\n                className = \"switchActive\";\r\n            else\r\n                className = \"switchDisabled\";\r\n            buttons.push(\r\n                <SwitchItem\r\n                    key={this.props.texts[i]}\r\n                    text={this.props.texts[i]}\r\n                    className={className}\r\n                    icon={this.props.icons !== undefined ? this.props.icons[i] : null}\r\n                    title={this.props.titles !== undefined ? this.props.titles[i] : null}\r\n                    clickHandler={this.props.changeSelected}\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"switch-multiple mt-3\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SwitchItem extends Component {\r\n    render() {\r\n        let content;\r\n        if (this.props.icon === null)\r\n            content = this.props.text;\r\n        else\r\n            content = <i className=\"material-icons\">this.props.icon</i>;\r\n        return (\r\n            <div\r\n                {...(this.props.title !== null ? {title: this.props.title} : {})}\r\n                className={this.props.className}\r\n                onClick={this.props.clickHandler.bind(this, this.props.text)}\r\n            >\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n{/*                <header className=\"header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n                    <p>\r\n                        Welcome on the <span className=\"accentuated\">Stock Portfolio Management System</span>.\r\n                    </p>\r\n\r\n                </header>*/}\r\n                <div className=\"parallax\">\r\n                    <a href=\"#main\"><i className=\"material-icons\">expand_more</i></a>\r\n                    <header className=\"header\">\r\n                        <h1>Welcome on the <span className=\"accentuated\">Stock Portfolio Management System</span>.</h1>\r\n                    </header>\r\n                </div>\r\n\r\n                <main>\r\n                    <div className=\"container\" id=\"main\">\r\n                        <PortfolioList/>\r\n                    </div>\r\n                </main>\r\n\r\n                <footer className=\"footer\">\r\n                    Data provided for free by <a href=\"https://iextrading.com/developer\">IEX</a>. View <a\r\n                    href=\"https://iextrading.com/api-exhibit-a/\">IEX’s Terms of Use</a>.\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}